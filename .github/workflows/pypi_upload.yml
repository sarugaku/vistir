name: Create Release & Upload To PyPI

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - v?[0-9]+.[0-9]+.[0-9]+  # add .* to allow dev releases

jobs:
  build:
    name: vistir PyPI Upload
    runs-on: ubuntu-latest
    env:
      CI: "1"

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install latest tools for build
      run: |
        python -m pip install --upgrade pip setuptools wheel pipenv invoke
        python -m pipenv install --dev --pre
        python -m pipenv run pip install invoke
    - name: Build wheels
      run: |
        python -m pipenv run inv build
    - name: Upload to PyPI via Twine
      # to upload to test pypi, pass --repository-url https://test.pypi.org/legacy/ and use secrets.TEST_PYPI_TOKEN
      run: |
        python -m pipenv run twine upload --verbose -u '__token__' -p '${{ secrets.PYPI_TOKEN }}' dist/*
    # git push https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:master
    # we need to use a deploy key for this to get around branch protection as the default token fails
    - name: Pre-bump
      run: |
        git config --local user.name 'Github Action'
        git config --local user.email action@github.com
        python -m pipenv run inv bump-version -t dev
        git commit -am 'pre-bump'

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: master
